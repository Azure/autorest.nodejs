/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The parameters to update on the account.
 *
 * @extends models['Resource']
 */
class StorageAccountUpdateParameters extends models['Resource'] {
  /**
   * Create a StorageAccountUpdateParameters.
   * @property {string} [accountType] Gets or sets the account type. Note that
   * StandardZRS and PremiumLRS accounts cannot be changed to other account
   * types, and other account types cannot be changed to StandardZRS or
   * PremiumLRS. Possible values include: 'Standard_LRS', 'Standard_ZRS',
   * 'Standard_GRS', 'Standard_RAGRS', 'Premium_LRS'
   * @property {object} [customDomain] User domain assigned to the storage
   * account. Name is the CNAME source. Only one custom domain is supported per
   * storage account at this time. To clear the existing custom domain, use an
   * empty string for the custom domain name property.
   * @property {string} [customDomain.name] Gets or sets the custom domain
   * name. Name is the CNAME source.
   * @property {boolean} [customDomain.useSubDomain] Indicates whether indirect
   * CName validation is enabled. Default value is false. This should only be
   * set on updates
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of StorageAccountUpdateParameters
   *
   * @returns {object} metadata of StorageAccountUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'StorageAccountUpdateParameters',
      type: {
        name: 'Composite',
        className: 'StorageAccountUpdateParameters',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          accountType: {
            required: false,
            serializedName: 'properties.accountType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Standard_LRS', 'Standard_ZRS', 'Standard_GRS', 'Standard_RAGRS', 'Premium_LRS' ]
            }
          },
          customDomain: {
            required: false,
            serializedName: 'properties.customDomain',
            type: {
              name: 'Composite',
              className: 'CustomDomain'
            }
          }
        }
      }
    };
  }
}

module.exports = StorageAccountUpdateParameters;
