/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

/* jshint latedef:false */
/* jshint forin:false */
/* jshint noempty:false */

'use strict';

const msRest = require('ms-rest');
const ServiceClient = msRest.ServiceClient;

const models = require('./models');
const operations = require('./operations');


/** Class representing a AutoRestParameterizedHostTestClient. */
class AutoRestParameterizedHostTestClient extends ServiceClient {
  /**
   * Create a AutoRestParameterizedHostTestClient.
   * @param {object} [options] - The parameter options
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   * @param {string} [options.host] - A string value that is used as a global part of the parameterized host
   */
  constructor(options) {

    if (!options) options = {};

    super(null, options);

    this.host = 'host';
    this.baseUri = 'http://{accountName}{host}';

    let packageInfo = this.getPackageJsonInfo(__dirname);
    this.addUserAgentInfo(`${packageInfo.name}/${packageInfo.version}`);
    if(options.host !== null && options.host !== undefined) {
      this.host = options.host;
    }
    this.paths = new operations.Paths(this);
    this.models = models;
    msRest.addSerializationMixin(this);
  }

}

module.exports = AutoRestParameterizedHostTestClient;
