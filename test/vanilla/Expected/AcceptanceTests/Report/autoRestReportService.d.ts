/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from "./models";

export default class AutoRestReportService extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the AutoRestReportService class.
   * @constructor
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   */
  constructor(baseUri?: string, options?: ServiceClientOptions);


  /**
   * Get test coverage report
   * @param {object} [options] Optional Parameters.
   * @param {string} [options.qualifier] If specified, qualifies the generated report further (e.g.
   * '2.7' vs '3.5' in for Python). The only effect is, that generators that run all tests several
   * times, can distinguish the generated reports.
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @returns {Promise} A promise is returned.
   */
  getReportWithHttpOperationResponse(options?: { qualifier? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<{ [propertyName: string]: number }>>;

  /**
   * Get test coverage report
   * @param {object} [options] Optional Parameters.
   * @param {string} [options.qualifier] If specified, qualifies the generated report further (e.g.
   * '2.7' vs '3.5' in for Python). The only effect is, that generators that run all tests several
   * times, can distinguish the generated reports.
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @param {function} [optionalCallback] The optional callback.
   * @returns {function|Promise} If a callback was passed as the last parameter, then it returns the
   * callback. Otherwise it returns a Promise.
   */
  getReport(options?: { qualifier? : string, customHeaders? : { [headerName: string]: string; } }): Promise<{ [propertyName: string]: number }>;
  getReport(callback: ServiceCallback<{ [propertyName: string]: number }>): void;
  getReport(options: { qualifier? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<{ [propertyName: string]: number }>): void;
}

export { AutoRestReportService, models as AutoRestReportServiceModels };
