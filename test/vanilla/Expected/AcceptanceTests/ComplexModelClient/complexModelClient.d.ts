/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from "./models";

export default class ComplexModelClient extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the ComplexModelClient class.
   * @constructor
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   */
  constructor(baseUri?: string, options?: ServiceClientOptions);

  subscriptionId: string;

  apiVersion: string;


  /**
   * @summary Product Types
   * @description The Products endpoint returns information about the Uber products offered at a
   * given location. The response includes the display name and other details about each product, and
   * lists the products in the proper display order.
   * @param {string} resourceGroupName Resource Group ID.
   * @param {object} [options] Optional Parameters.
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @returns {Promise} A promise is returned.
   */
  listWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CatalogArray>>;

  /**
   * @summary Product Types
   * @description The Products endpoint returns information about the Uber products offered at a
   * given location. The response includes the display name and other details about each product, and
   * lists the products in the proper display order.
   * @param {string} resourceGroupName Resource Group ID.
   * @param {object} [options] Optional Parameters.
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @param {function} [optionalCallback] The optional callback.
   * @returns {function|Promise} If a callback was passed as the last parameter, then it returns the
   * callback. Otherwise it returns a Promise.
   */
  list(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CatalogArray>;
  list(resourceGroupName: string, callback: ServiceCallback<models.CatalogArray>): void;
  list(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CatalogArray>): void;


  /**
   * @summary Create products
   * @description Resets products.
   * @param {string} subscriptionId Subscription ID.
   * @param {string} resourceGroupName Resource Group ID.
   * @param {object} [options] Optional Parameters.
   * @param {object} [options.productDictionaryOfArray] Dictionary of Array of product
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @returns {Promise} A promise is returned.
   */
  createWithHttpOperationResponse(subscriptionId: string, resourceGroupName: string, options?: { productDictionaryOfArray? : { [propertyName: string]: models.Product[] }, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CatalogDictionary>>;

  /**
   * @summary Create products
   * @description Resets products.
   * @param {string} subscriptionId Subscription ID.
   * @param {string} resourceGroupName Resource Group ID.
   * @param {object} [options] Optional Parameters.
   * @param {object} [options.productDictionaryOfArray] Dictionary of Array of product
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @param {function} [optionalCallback] The optional callback.
   * @returns {function|Promise} If a callback was passed as the last parameter, then it returns the
   * callback. Otherwise it returns a Promise.
   */
  create(subscriptionId: string, resourceGroupName: string, options?: { productDictionaryOfArray? : { [propertyName: string]: models.Product[] }, customHeaders? : { [headerName: string]: string; } }): Promise<models.CatalogDictionary>;
  create(subscriptionId: string, resourceGroupName: string, callback: ServiceCallback<models.CatalogDictionary>): void;
  create(subscriptionId: string, resourceGroupName: string, options: { productDictionaryOfArray? : { [propertyName: string]: models.Product[] }, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CatalogDictionary>): void;


  /**
   * @summary Update products
   * @description Resets products.
   * @param {string} subscriptionId Subscription ID.
   * @param {string} resourceGroupName Resource Group ID.
   * @param {object} [options] Optional Parameters.
   * @param {array} [options.productArrayOfDictionary] Array of dictionary of products
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @returns {Promise} A promise is returned.
   */
  updateWithHttpOperationResponse(subscriptionId: string, resourceGroupName: string, options?: { productArrayOfDictionary? : { [propertyName: string]: models.Product }[], customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CatalogArray>>;

  /**
   * @summary Update products
   * @description Resets products.
   * @param {string} subscriptionId Subscription ID.
   * @param {string} resourceGroupName Resource Group ID.
   * @param {object} [options] Optional Parameters.
   * @param {array} [options.productArrayOfDictionary] Array of dictionary of products
   * @param {object} [options.customHeaders] Headers that will be added to the request
   * @param {function} [optionalCallback] The optional callback.
   * @returns {function|Promise} If a callback was passed as the last parameter, then it returns the
   * callback. Otherwise it returns a Promise.
   */
  update(subscriptionId: string, resourceGroupName: string, options?: { productArrayOfDictionary? : { [propertyName: string]: models.Product }[], customHeaders? : { [headerName: string]: string; } }): Promise<models.CatalogArray>;
  update(subscriptionId: string, resourceGroupName: string, callback: ServiceCallback<models.CatalogArray>): void;
  update(subscriptionId: string, resourceGroupName: string, options: { productArrayOfDictionary? : { [propertyName: string]: models.Product }[], customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CatalogArray>): void;
}

export { ComplexModelClient, models as ComplexModelModels };
